using UnityEditor;
using UnityEngine;

[CustomEditor(typeof(AutoGeneratedScriptable), true)]
public class AutoGeneratedScriptableEditor : Editor {
    public override void OnInspectorGUI() {
        DrawDefaultInspector();

        AutoGeneratedScriptable scriptable = (AutoGeneratedScriptable)target;

        if (string.IsNullOrEmpty(scriptable.KeyScript)) {
            EditorGUILayout.HelpBox("No Key Script assigned.", MessageType.Warning);
            return;
        }

        GUILayout.Space(15);
        EditorGUILayout.LabelField("🔑 Key Binding Info", EditorStyles.boldLabel);
        EditorGUILayout.LabelField("", GUI.skin.horizontalSlider);

        EditorGUILayout.BeginVertical("box");
        EditorGUILayout.LabelField("Key Script:", scriptable.KeyScript, EditorStyles.wordWrappedLabel);

        GUILayout.Space(12);
        Color originalColor = GUI.backgroundColor;
        GUI.backgroundColor = new Color(0.2f, 0.6f, 1f);
        if (GUILayout.Button("✏️ Edit Key Script", GUILayout.Height(32))) {
            if (!OpenScriptByName(scriptable.KeyScript))
                EditorUtility.DisplayDialog("Not Found", $"Script '{scriptable.KeyScript}' could not be found in the project.", "OK");
        }
        GUI.backgroundColor = originalColor;
        EditorGUILayout.EndVertical();
    }

    // Returns true if script found and opened, false otherwise
    static bool OpenScriptByName(string scriptName) {
        var guids = AssetDatabase.FindAssets($"t:MonoScript {scriptName}");
        foreach (var guid in guids) {
            var path = AssetDatabase.GUIDToAssetPath(guid);
            MonoScript script = AssetDatabase.LoadAssetAtPath<MonoScript>(path);
            if (!script || script.name != scriptName) 
                continue;
            AssetDatabase.OpenAsset(script);
            return true;
        }
        return false;
    }
}